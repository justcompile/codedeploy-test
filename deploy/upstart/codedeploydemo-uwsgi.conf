#!upstart
# startup monitoring script derived from http://stackoverflow.com/questions/11084279/node-js-setup-for-easy-deployment-and-updating

description "StoryStream codedeploydemo uWSGI Server"
author      "Richard Hayes"
env PROGRAM_NAME="codedeploydemo-uwsgi"
env FULL_PATH="/srv/codedeploydemo/code"
env USER="www-data"
env GROUP="www-data"
env SOCKET_PATH="/tmp/codedeploydemo.sock"
#env LISTEN_QUEUE="16384"
#env HARAKIRI="60"
env HARV_MGR_VENV="/srv/codedeploydemo/venv"

start on runlevel [2345]
stop on runlevel [06]

script
        cd $FULL_PATH
        export PYTHONPATH=`pwd`
        export WORKERS=`/srv/codedeploydemo/venv/bin/python -c 'import multiprocessing; print multiprocessing.cpu_count()*2+1'`

        echo $$ > /var/run/$PROGRAM_NAME.pid

        exec /srv/codedeploydemo/venv/bin/uwsgi --chdir $FULL_PATH -H $HARV_MGR_VENV -p $WORKERS --uid $USER --gid $GROUP --socket $SOCKET_PATH --lazy -w live_server:app --logto /var/log/$PROGRAM_NAME.log --master --env HARVESTER_ENV=live
end script

pre-start script
    # Date format same as (new Date()).toISOString() for consistency
    echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Starting" >> /var/log/$PROGRAM_NAME.sys.log
end script

pre-stop script
    rm /var/run/$PROGRAM_NAME.pid
    echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Stopping" >> /var/log/$PROGRAM_NAME.sys.log
end script
